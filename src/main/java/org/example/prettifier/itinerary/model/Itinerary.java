package org.example.prettifier.itinerary.model;

import lombok.Data;

import java.time.ZonedDateTime;

/**
 * üìå Lombok Cheat Sheet (–∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏)
 *
 * <table border="1">
 *   <caption>–û—Å–Ω–æ–≤–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ Lombok</caption>
 *   <tr>
 *     <th>–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è</th>
 *     <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
 *     <th>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</th>
 *   </tr>
 *   <tr>
 *     <td>{@code @Getter}</td>
 *     <td>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π</td>
 *     <td>–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @Setter}</td>
 *     <td>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª–µ–π</td>
 *     <td>–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @Data}</td>
 *     <td>–ì–µ—Ç—Ç–µ—Ä—ã + –°–µ—Ç—Ç–µ—Ä—ã + ToString + Equals/HashCode + RequiredArgsConstructor</td>
 *     <td>–î–ª—è DTO –∏ –º–æ–¥–µ–ª–µ–π</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @Value}</td>
 *     <td>–ö–∞–∫ @Data, –Ω–æ –¥–µ–ª–∞–µ—Ç –æ–±—ä–µ–∫—Ç immutable (final)</td>
 *     <td>–î–ª—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @Builder}</td>
 *     <td>–ü–∞—Ç—Ç–µ—Ä–Ω Builder ‚Äî —É–¥–æ–±–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤</td>
 *     <td>–û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ DTO</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @NoArgsConstructor}</td>
 *     <td>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</td>
 *     <td>–ù—É–∂–µ–Ω –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @AllArgsConstructor}</td>
 *     <td>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–æ –≤—Å–µ–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏</td>
 *     <td>–£–ø—Ä–æ—â–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @RequiredArgsConstructor}</td>
 *     <td>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è final –∏ @NonNull –ø–æ–ª–µ–π</td>
 *     <td>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ AllArgs</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @ToString}</td>
 *     <td>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ toString()</td>
 *     <td>–ú–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—è</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @EqualsAndHashCode}</td>
 *     <td>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç equals() –∏ hashCode()</td>
 *     <td>–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @Slf4j}</td>
 *     <td>–î–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–≥–≥–µ—Ä log</td>
 *     <td>–î–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è</td>
 *   </tr>
 *   <tr>
 *     <td>{@code @NonNull}</td>
 *     <td>–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö</td>
 *     <td>–ö–∏–¥–∞–µ—Ç NPE</td>
 *   </tr>
 * </table>
 */

/*
* –°—É—â–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Ä—à—Ä—É—Ç–µ
* */

@Data
public class Itinerary {
    private String name;
    private String iso;
    private String municipality;
    private String icao_code;
    private String iata_code;
    private ZonedDateTime dateTime;
}
